#!/bin/bash
DIR=$(readlink -f "$(dirname "$0")")
INSTALLATION="$HOME/.dfiles"
BRANCH="installation"
CURRENT_COLORSCHEME="$INSTALLATION/colorscheme.yaml"
COLORSCHEME="$CURRENT_COLORSCHEME"

if [[ -z "$1" && ! -e "$CURRENT_COLORSCHEME" ]]; then
  echo "You don't have an installed colorscheme, please select a base16 scheme file"
  exit 1
elif [[ -n "$1" && ! -e "$1" ]]; then
  echo "The specified file doesn't exist"
  exit 1
elif [[ -n "$1" && -e "$1" ]]; then
  COLORSCHEME=$(realpath "$1")
fi

cd "$DIR" || exit 1

function setup_local_installation() {
  if ! git show-ref --verify --quiet refs/heads/$BRANCH; then
    git branch "$BRANCH" > /dev/null 2> /dev/null
    git worktree add "$INSTALLATION" "$BRANCH" > /dev/null 2> /dev/null
  fi
}

function install_configs() {
  cd "$INSTALLATION" || exit 1

  package="configs"
  package_dirs=$(fd -H --type d . "$package" | sed "s|^$package/|$HOME/|" | uniq | sort)
  if [[ -n "$package_dirs" ]]; then
    echo "$package_dirs" | xargs mkdir -p
  fi
  stow -t "$HOME" -S "$package"
}

function build_configs() {
  cd "$INSTALLATION" || exit 1

  stat "$COLORSCHEME" > /dev/null || exit 1

  if [[ "$COLORSCHEME" != "$CURRENT_COLORSCHEME" ]]; then
    cp "$COLORSCHEME" "$CURRENT_COLORSCHEME"
  fi

  for template in $(fd -H -e mustache --exclude "colorschemes" .); do
    target="${template%.mustache}"
    tmp="${template/%.mustache/.tmp}"

    theme=$(python build-base16-json.py \
      "$(yq '.' "$CURRENT_COLORSCHEME")" \
      "$(basename "$CURRENT_COLORSCHEME")")

    echo "$theme" | mustache - "$template" > "$tmp"

    mv "$tmp" "$target"
    chmod --reference="$template" "$target"
  done
}

setup_local_installation
build_configs
install_configs
